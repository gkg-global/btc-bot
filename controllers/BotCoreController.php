<?php

namespace app\controllers;

use app\models\BotMessage;
use yii\filters\AccessControl;
use yii\web\Controller;

class BotCoreController extends Controller
{
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                //'only' => ['logout'],
                'rules' => [
                    [
                        'allow' => true,
                        //'actions' => ['login', 'signup'],
                        //'roles' => ['?'],
                    ],
                    [
                        'allow' => true,
                        //'actions' => ['login','signup','logout','about','index','contact' ],
                        //'roles' => ['?'],
                    ],
                ],

            ],
        ];
    }

    public function beforeAction($action)
    {
        // To bypass from FB bot
        $this->enableCsrfValidation = false;

        // To get original post data from FB bot
        //$this->post_orig_data = Yii::$app->request->getRawBody();
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionIndex()
    {
        echo "Hi, I'm BTC bot";
    }
    public static function processMessage($msg = false) {

        // ==============
        // How it works:
        // send to Dialogflow processing Controller
        // receive action / intent ID
        // send to BotCore Controller
        // BotCore Controller send to Exchange Controller
        // receive from Exchange Controller to BotCore controller
        // receive from BotCore Controller to FbController
        // send reply to user
        // ==============

        //NLP msg processing
        $intent = NlpController::processNLP($msg->message);

        // RESULT
        // $intent->result->fulfillment->speech;
        // $intent->result->action

        // Prepare & Save message

        //UPD message
        $msg->intent_id = $intent->result->action;
        $msg->locale = $intent->lang;
        $msg->updateMessageNlpData();


        if ($intent->result->action == 'btc_rate') {
            return ['type' => 'text', 'msg' => 'BTC to USD rate now: ' . ExchangeController::getMarketPrice() . ' USD'];
        } else {
            return ['type' => 'text', 'msg' => $intent->result->fulfillment->speech];
        }

    }


}
